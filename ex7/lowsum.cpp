#include <iostream>
#include <climits>
using namespace std;
int main() {
  std::ios::sync_with_stdio(false);
  int n, i, a[1000000], x, left, right, sum, closest, closest_sum;
  cin >> n;
  for(i=0; i<n; i++) {
    cin >> a[i];
  }
  x = 0;
  left = 0;
  right = n - 1;
  sum = 0;
  closest = INT_MAX;
  while(left < right) {
    sum = a[left] + a[right];
    if(abs(x-sum) < closest) {
      closest = abs(x-sum);
      closest_sum = sum;
      }
    if(sum > x) {
      right--;
    }
    else if(sum <= x) {
      left++;
    }
  }
  cout << closest_sum << "\n";
}

/*
Εκφώνηση
Δίνεται μια ακολουθία N διαφορετικών ακεραίων (αρνητικών και θετικών) σε 
αύξουσα σειρά. Να γράψετε ένα πρόγραμμα το οποίο θα βρίσκει δύο διαφορετικούς 
αριθμούς της ακολουθίας που το άθροισμά τους είναι όσο το δυνατόν πιο κοντά στο 0.

Δεδομένα εισόδου
Η πρώτη γραμμή της εισόδου θα περιέχει το πλήθος των στοιχείων της ακολουθίας Ν. 
Η δεύτερη γραμμή της εισόδου θα περιέχει Ν διαφορετικούς ακέραιους αριθμούς 
(αρνητικούς και θετικούς) σε αύξουσα σειρά. Οι αριθμοί θα χωρίζονται με κενά 
διαστήματα, και μπορεί να είναι και όλοι θετικοί ή όλοι αρνητικοί. Η ακολουθία 
δεν θα περιέχει το 0, η απόλυτη τιμή των αριθμών θα είναι μικρότερη ή ίση του 
10^9, και θα ισχύει ότι 2 <= Ν <= 1.000.000.

Να θεωρήσετε ως δεδομένο ότι η είσοδος θα είναι έγκυρη.

Δεδομένα εξόδου
Η έξοδος πρέπει να αποτελείται από μία γραμμή που περιέχει ακριβώς έναν ακέραιο 
αριθμό, ο οποίος αντιστοιχεί στο άθροισμα δύο διαφορετικών αριθμών της ακολουθίας 
που είναι πλησιέστερα στο 0.

Περιορισμοί
Όριο χρόνου εκτέλεσης: 1 sec.
Όριο μνήμης: 64 MB.

Παράδειγμα εισόδου
5
-101 -4 -1 6 95
Παράδειγμα εξόδου
2

Παράδειγμα εισόδου 2
8
-110 -22 -1 28 35 105 140 145
Παράδειγμα εξόδου 2
-5
*/