#include <iostream>
#include <algorithm>
#include <cstdio>
using namespace std;
int a[1000000], b[1000000], c[1000000];
int ac[1000000], bc[1000000], cc[1000000];
int main() {
  int n, i, z;
  scanf("%d", &n);
  for(i=0; i<n; i++) {
    scanf("%d", &a[i]);
  }
  for(i=0; i<n; i++) {
    scanf("%d", &b[i]);
  }
  for(i=0; i<n; i++) {
    scanf("%d", &c[i]);
  }
  for(i=0; i<n; i++) {
    ac[z] = a[i];
    bc[z] = b[i];
    cc[z] = c[i];
    z++;
  }
  int j, k, r;
  int pos1, pos2, pos3;
  sort(ac, ac + n);
  sort(bc, bc + n);
  sort(cc, cc + n);
  for(i=0; i<n; i++) {
    if(ac[n-1] == a[i]) {
      pos1 = i;
    }
    if(bc[n-1] == b[i]) {
      pos2 = i;
    }
    if(cc[n-1] == c[i]) {
      pos3 = i;
    }
  }
  if(pos1 < pos2 && pos2 < pos3) {
    printf("%d", ac[n-1] + bc[n-1] + cc[n-1]);
  }
  else {
    while(pos1 > pos2 || pos1 > pos3 || pos2 > pos3) {
      while(pos1 > pos2 || pos1 > pos3) {
        for(j=2; j<=n; j++) {
        for(i=0; i<n; i++) {
          if(ac[n-j] == a[i]) {
            pos1 = i;
          }
        }
      }
      }
      while(pos2 > pos3) {
        for(k=2; k<=n; k++) {
        for(r=0; r<n; r++) {
          if(bc[n-k] == b[r]) {
            pos2 = r;
          }
        }
      }
    }
    }
    printf("%d", ac[n-j] + bc[n-k] + cc[n-1]);
  }
}

/* MISSING
maxsum:
Εκφώνηση
Δίνεται μια ακολουθία N ακεραίων αριθμών (που μπορεί να είναι αρνητικοί, θετικοί 
ή και μηδέν). Να γράψετε ένα πρόγραμμα το οποίο θα υπολογίζει το μέγιστο άθροισμα 
(οσωνδήποτε) διαδοχικών όρων της ακολουθίας.

Δεδομένα εισόδου
Η πρώτη γραμμή της εισόδου θα περιέχει το πλήθος N των στοιχείων της ακολουθίας. 
Η δεύτερη γραμμή της εισόδου θα περιέχει Ν ακέραιους αριθμούς. Οι αριθμοί θα 
χωρίζονται με κενά διαστήματα, και η απόλυτη τιμή τους θα είναι μικρότερη ή ίση 
του 1000.

Να θεωρήσετε ως δεδομένο ότι 2 <= Ν <= 1.000.000, και ότι η είσοδος θα είναι 
έγκυρη.

Δεδομένα εξόδου
Η έξοδος πρέπει να αποτελείται από μία γραμμή που να περιέχει ακριβώς έναν 
ακέραιο αριθμό, ο οποίος αντιστοιχεί στο μέγιστο άθροισμα διαδοχικών όρων της 
ακολουθίας.

Περιορισμοί
Όριο χρόνου εκτέλεσης: 1 sec.
Όριο μνήμης: 64 MB.

Παράδειγμα εισόδου
10
1 5 -1 -6 14 -8 7 2 -5 4
Παράδειγμα εξόδου
15

Παράδειγμα εισόδου 2
10
1 7 -10 -11 9 9 -7 2 12 -4
Παράδειγμα εξόδου 2
25

max2sum:
Εκφώνηση
Δίνεται μία ακολουθία Ν θετικών ακέραιων αριθμών. Επιλέγω δύο από αυτούς και 
υπολογίζω το άθροισμά τους συν την απόστασή τους μέσα στην ακολουθία. 
Για παράδειγμα, έστω ότι Ν=6 και οι αριθμοί της ακολουθίας είναι: 7 3 9 8 2 7.
Αν επιλέξω το 3 και το 8, η απόστασή τους είναι 2 (γιατί το 3 είναι ο δεύτερος 
όρος της ακολουθίας και το 8 είναι ο τέταρτος, επομένως 4-2=2), άρα το άθροισμα 
που υπολογίζω είναι 3+8+2=13.

Γράψτε ένα πρόγραμμα που, δεδομένης μίας τέτοιας ακολουθίας, να βρίσκει τη 
μέγιστη δυνατή τιμή αυτού του αθροίσματος.

Προσοχή: Πρέπει να επιλέξω δύο διαφορετικούς όρους της ακολουθίας, όχι δύο 
φορές τον ίδιο όρο. Αυτό δεν αποκλείει να επιλεγεί ο ίδιος αριθμός, αν 
εμφανίζεται δύο φορές στην ακολουθία.

Δεδομένα εισόδου
Η πρώτη γραμμή της εισόδου θα περιέχει το πλήθος N των στοιχείων της ακολουθίας. 
Η δεύτερη γραμμή της εισόδου θα περιέχει Ν ακέραιους αριθμούς, χωρισμένους ανά 
δύο με ένα κενό διάστημα.

Να θεωρήσετε ως δεδομένο ότι 2 <= Ν <= 1.000.000, ότι η είσοδος θα είναι έγκυρη 
και ότι οι αριθμοί δε θα υπερβαίνουν το 1.000.000.000.

Δεδομένα εξόδου
Η έξοδος πρέπει να αποτελείται από μία γραμμή που να περιέχει ακριβώς έναν 
ακέραιο αριθμό, τη μεγαλύτερη δυνατή τιμή του ζητούμενου αθροίσματος.

Περιορισμοί
2 <= N <= 1.000.000
Όριο χρόνου εκτέλεσης: 1 sec.
Όριο μνήμης: 10 MB.

Παράδειγμα εισόδου
6
7 3 9 8 2 7
Παράδειγμα εξόδου
19
*/